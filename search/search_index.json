{"config":{"lang":["en"],"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Packer Builder Welcome to Packer Builder.","title":"Packer Builder"},{"location":"#packer-builder","text":"Welcome to Packer Builder.","title":"Packer Builder"},{"location":"ABOUT/","text":"About Packer Builder Packer Builder is completely open-source, and we welcome feedback, contributions, and recommendations. Start using Packer Builder now, by heading over to https://github.com/mrlesmithjr/packer-builder . Why Packer Builder Problems That Packer Builder Solves Concepts Using Packer SHOULD be straight forward and in most cases, it is. Packer builder abstracts many of the complexities of building images. With Packer builder, we wrap many of these complexities within code. By doing this, it provides us with a consistent model to build our images. We can inject logic which many times is not apparent. In addition to all of this, implement best practices into our builds. Is this builder for everyone? No. But for many, Packer can be a daunting process. So, we can minimize these processes, and make Packer builds more consumable.","title":"About Packer Builder"},{"location":"ABOUT/#about-packer-builder","text":"Packer Builder is completely open-source, and we welcome feedback, contributions, and recommendations. Start using Packer Builder now, by heading over to https://github.com/mrlesmithjr/packer-builder .","title":"About Packer Builder"},{"location":"ABOUT/#why-packer-builder","text":"","title":"Why Packer Builder"},{"location":"ABOUT/#problems-that-packer-builder-solves","text":"","title":"Problems That Packer Builder Solves"},{"location":"ABOUT/#concepts","text":"Using Packer SHOULD be straight forward and in most cases, it is. Packer builder abstracts many of the complexities of building images. With Packer builder, we wrap many of these complexities within code. By doing this, it provides us with a consistent model to build our images. We can inject logic which many times is not apparent. In addition to all of this, implement best practices into our builds. Is this builder for everyone? No. But for many, Packer can be a daunting process. So, we can minimize these processes, and make Packer builds more consumable.","title":"Concepts"},{"location":"USAGE/","text":"Packer Builder Usage Help python -m packer_builder --help ... usage: __main__.py [-h] [-d DISTRO] [-b BUILDER] [-f FILE] [-n NUMDAYS] [-o OUTPUTDIR] [-p PASSWORD] {build,generate-templates,list-distros,update-metadata} Packer builder. positional arguments: {build,generate-templates,list-distros,update-metadata} optional arguments: -h, --help show this help message and exit -d DISTRO, --distro DISTRO Only build specific distro. -b BUILDER, --builder BUILDER Only use specific builder. -f FILE, --file FILE Path to distro. -n NUMDAYS, --numdays NUMDAYS Define number of days since last build. -o OUTPUTDIR, --outputdir OUTPUTDIR Define path to save builds. -p PASSWORD, --password PASSWORD Define default password to override distros.yml Examples Build All Distros For All Builders This will build all distros for all builders. python -m packer_builder build -o ~/projects/packer/builds Build All Distros For A Specific Builder This will build all distros for a specific builder (virtualbox-iso in this example). python -m packer_builder build -o ~/projects/packer/builds -b virtualbox-iso Build A Specific Distro For All Builders This will build a specific distro (CentOS in this example) for all builders. python -m packer_builder build -o ~/projects/packer/builds -d CentOS Build A Specific Distro For A Specific Builder This will build a specific distro (CentOS in this example) for a specific builder (virtualbox-iso in this example). python -m packer_builder build -o ~/projects/packer/builds -d CentOS -b virtualbox-iso Define Default Password At Runtime Because there might be a scenario in which you would want to override the password for all distros defined in distros.yml . You can pass this override password as part of the CLI arguments. python -m packer_builder build -o ~/projects/packer/builds -p SuperSecretPass Generate Templates (ONLY) python -m packer_builder generate-templates --outputdir ~/projects/packer vagrant-libvirt plugin on macOS brew install libiconv gcc libvirt RV=$(/opt/vagrant/embedded/bin/ruby --version | awk '{ print $2 }'| awk '{ split($0, a, \"p\"); print a[1] }') CONFIGURE_ARGS='with-ldflags=-L/opt/vagrant/embedded/lib with-libvirt-include=/usr/local/include/libvirt with-libvirt-lib=/usr/local/lib' \\ GEM_HOME=~/.vagrant.d/gems/$RV \\ GEM_PATH=$GEM_HOME:/opt/vagrant/embedded/gems \\ PATH=/opt/vagrant/embedded/bin:$PATH \\ vagrant plugin install vagrant-libvirt","title":"Packer Builder Usage"},{"location":"USAGE/#packer-builder-usage","text":"","title":"Packer Builder Usage"},{"location":"USAGE/#help","text":"python -m packer_builder --help ... usage: __main__.py [-h] [-d DISTRO] [-b BUILDER] [-f FILE] [-n NUMDAYS] [-o OUTPUTDIR] [-p PASSWORD] {build,generate-templates,list-distros,update-metadata} Packer builder. positional arguments: {build,generate-templates,list-distros,update-metadata} optional arguments: -h, --help show this help message and exit -d DISTRO, --distro DISTRO Only build specific distro. -b BUILDER, --builder BUILDER Only use specific builder. -f FILE, --file FILE Path to distro. -n NUMDAYS, --numdays NUMDAYS Define number of days since last build. -o OUTPUTDIR, --outputdir OUTPUTDIR Define path to save builds. -p PASSWORD, --password PASSWORD Define default password to override distros.yml","title":"Help"},{"location":"USAGE/#examples","text":"","title":"Examples"},{"location":"USAGE/#build-all-distros-for-all-builders","text":"This will build all distros for all builders. python -m packer_builder build -o ~/projects/packer/builds","title":"Build All Distros For All Builders"},{"location":"USAGE/#build-all-distros-for-a-specific-builder","text":"This will build all distros for a specific builder (virtualbox-iso in this example). python -m packer_builder build -o ~/projects/packer/builds -b virtualbox-iso","title":"Build All Distros For A Specific Builder"},{"location":"USAGE/#build-a-specific-distro-for-all-builders","text":"This will build a specific distro (CentOS in this example) for all builders. python -m packer_builder build -o ~/projects/packer/builds -d CentOS","title":"Build A Specific Distro For All Builders"},{"location":"USAGE/#build-a-specific-distro-for-a-specific-builder","text":"This will build a specific distro (CentOS in this example) for a specific builder (virtualbox-iso in this example). python -m packer_builder build -o ~/projects/packer/builds -d CentOS -b virtualbox-iso","title":"Build A Specific Distro For A Specific Builder"},{"location":"USAGE/#define-default-password-at-runtime","text":"Because there might be a scenario in which you would want to override the password for all distros defined in distros.yml . You can pass this override password as part of the CLI arguments. python -m packer_builder build -o ~/projects/packer/builds -p SuperSecretPass","title":"Define Default Password At Runtime"},{"location":"USAGE/#generate-templates-only","text":"python -m packer_builder generate-templates --outputdir ~/projects/packer","title":"Generate Templates (ONLY)"},{"location":"USAGE/#vagrant-libvirt-plugin-on-macos","text":"brew install libiconv gcc libvirt RV=$(/opt/vagrant/embedded/bin/ruby --version | awk '{ print $2 }'| awk '{ split($0, a, \"p\"); print a[1] }') CONFIGURE_ARGS='with-ldflags=-L/opt/vagrant/embedded/lib with-libvirt-include=/usr/local/include/libvirt with-libvirt-lib=/usr/local/lib' \\ GEM_HOME=~/.vagrant.d/gems/$RV \\ GEM_PATH=$GEM_HOME:/opt/vagrant/embedded/gems \\ PATH=/opt/vagrant/embedded/bin:$PATH \\ vagrant plugin install vagrant-libvirt","title":"vagrant-libvirt plugin on macOS"}]}